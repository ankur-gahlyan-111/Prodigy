<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stopwatch</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="stopwatch-container">
    <h1>Stopwatch</h1>
    <div id="display" class="stopwatch-display">00:00:00</div>
    <div class="buttons">
      <button onclick="startStopwatch()">Start</button>
      <button onclick="pauseStopwatch()">Pause</button>
      <button onclick="resetStopwatch()">Reset</button>
    </div>
  </div>

  <script src="script.js"></script>
</body>
</html>


//Code in CSS
body {
  font-family: Arial, sans-serif;
  background-color: #f0f0f0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

.stopwatch-container {
  background-color: #fff;
  width: 300px;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
}

.stopwatch-display {
  font-size: 2em;
  margin-bottom: 20px;
}

.buttons {
  display: flex;
  justify-content: center;
}

button {
  padding: 10px 20px;
  font-size: 1em;
  background-color: #007bff;
  color: #fff;
  border: none;
  cursor: pointer;
  margin: 0 5px;
  border-radius: 4px;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #0056b3;
}


//Code in Javascript
let stopwatchInterval;
let startTime;
let elapsedTime = 0;
let isRunning = false;

const display = document.getElementById('display');

function startStopwatch() {
  if (!isRunning) {
    isRunning = true;
    startTime = Date.now() - elapsedTime;
    stopwatchInterval = setInterval(updateTime, 10); // Update time every 10 milliseconds
  }
}

function pauseStopwatch() {
  if (isRunning) {
    isRunning = false;
    clearInterval(stopwatchInterval);
  }
}

function resetStopwatch() {
  clearInterval(stopwatchInterval);
  isRunning = false;
  elapsedTime = 0;
  display.textContent = formatTime(elapsedTime);
}

function updateTime() {
  const now = Date.now();
  elapsedTime = now - startTime;
  display.textContent = formatTime(elapsedTime);
}

function formatTime(milliseconds) {
  const totalSeconds = Math.floor(milliseconds / 1000);
  const totalMinutes = Math.floor(totalSeconds / 60);
  const totalHours = Math.floor(totalMinutes / 60);

  const formattedHours = padTime(totalHours % 24);
  const formattedMinutes = padTime(totalMinutes % 60);
  const formattedSeconds = padTime(totalSeconds % 60);
  const formattedMilliseconds = padTime(Math.floor(milliseconds % 1000 / 10));

  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}.${formattedMilliseconds}`;
}

function padTime(time) {
  return time.toString().padStart(2, '0');
}

